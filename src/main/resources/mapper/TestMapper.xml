<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.sdp.project.pethospital.mapper.TestMapper">
  <resultMap id="BaseResultMap" type="edu.sdp.project.pethospital.entity.Test">
    <constructor>
      <idArg column="testId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="testOptionId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="beginDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="endDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="score" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    testId, userId, testOptionId, beginDate, endDate, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="edu.sdp.project.pethospital.entity.TestKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="edu.sdp.project.pethospital.entity.TestKey">
    delete from test
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.sdp.project.pethospital.entity.Test">
    insert into test (testId, userId, testOptionId, 
      beginDate, endDate, score
      )
    values (#{testid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{testoptionid,jdbcType=INTEGER}, 
      #{begindate,jdbcType=TIMESTAMP}, #{enddate,jdbcType=TIMESTAMP}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.sdp.project.pethospital.entity.Test">
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testid != null">
        testId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="testoptionid != null">
        testOptionId,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="enddate != null">
        endDate,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testid != null">
        #{testid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="testoptionid != null">
        #{testoptionid,jdbcType=INTEGER},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.sdp.project.pethospital.entity.Test">
    update test
    <set>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        endDate = #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.sdp.project.pethospital.entity.Test">
    update test
    set beginDate = #{begindate,jdbcType=TIMESTAMP},
      endDate = #{enddate,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=INTEGER}
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="edu.sdp.project.pethospital.entity.Test">
    <constructor>
      <idArg column="testId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="testOptionId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="beginDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="endDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="score" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    testId, userId, testOptionId, beginDate, endDate, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="edu.sdp.project.pethospital.entity.TestKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="edu.sdp.project.pethospital.entity.TestKey">
    delete from test
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.sdp.project.pethospital.entity.Test">
    insert into test (testId, userId, testOptionId, 
      beginDate, endDate, score
      )
    values (#{testid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{testoptionid,jdbcType=INTEGER}, 
      #{begindate,jdbcType=TIMESTAMP}, #{enddate,jdbcType=TIMESTAMP}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.sdp.project.pethospital.entity.Test">
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testid != null">
        testId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="testoptionid != null">
        testOptionId,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="enddate != null">
        endDate,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testid != null">
        #{testid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="testoptionid != null">
        #{testoptionid,jdbcType=INTEGER},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.sdp.project.pethospital.entity.Test">
    update test
    <set>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        endDate = #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.sdp.project.pethospital.entity.Test">
    update test
    set beginDate = #{begindate,jdbcType=TIMESTAMP},
      endDate = #{enddate,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=INTEGER}
    where testId = #{testid,jdbcType=INTEGER}
      and userId = #{userid,jdbcType=INTEGER}
      and testOptionId = #{testoptionid,jdbcType=INTEGER}
  </update>
</mapper>